prometheus:
  prometheusSpec:
    retention: 30d
    retentionSize: 100GB
    
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 200Gi
              
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 2000m
        memory: 8Gi
        
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    
    additionalScrapeConfigs:
    - job_name: 'mas-agents'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - mas-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
        
alertmanager:
  config:
    global:
      resolve_timeout: 5m
      
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default'
      routes:
      - match:
          severity: critical
        receiver: pagerduty
      - match:
          severity: warning
        receiver: slack
        
    receivers:
    - name: 'default'
    
    - name: 'pagerduty'
      pagerduty_configs:
      - service_key: '{{ .Values.pagerduty.serviceKey }}'
        
    - name: 'slack'
      slack_configs:
      - api_url: '{{ .Values.slack.webhookUrl }}'
        channel: '#alerts'
        title: 'MAS System Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

grafana:
  adminPassword: '{{ .Values.grafana.adminPassword }}'
  
  persistence:
    enabled: true
    size: 10Gi
    
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-prometheus:9090
        access: proxy
        isDefault: true
        
      - name: Loki
        type: loki
        url: http://loki:3100
        access: proxy
        
      - name: Jaeger
        type: jaeger
        url: http://jaeger-query:16686
        access: proxy
        
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
          
  dashboards:
    default:
      mas-overview:
        url: https://raw.githubusercontent.com/mas-system/dashboards/main/mas-overview.json
      agent-performance:
        url: https://raw.githubusercontent.com/mas-system/dashboards/main/agent-performance.json
      system-metrics:
        url: https://raw.githubusercontent.com/mas-system/dashboards/main/system-metrics.json